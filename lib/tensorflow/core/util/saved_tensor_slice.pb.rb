#!/usr/bin/env ruby
# Generated by the protocol buffer compiler. DO NOT EDIT!

require 'protocol_buffers'

begin; require 'tensorflow/core/framework/tensor_shape.pb'; rescue LoadError; end
begin; require 'tensorflow/core/framework/tensor_slice.pb'; rescue LoadError; end
begin; require 'tensorflow/core/framework/tensor.pb'; rescue LoadError; end
begin; require 'tensorflow/core/framework/types.pb'; rescue LoadError; end
begin; require 'tensorflow/core/framework/versions.pb'; rescue LoadError; end

module Tensorflow
  # forward declarations
  class SavedSliceMeta < ::ProtocolBuffers::Message; end
  class SavedTensorSliceMeta < ::ProtocolBuffers::Message; end
  class SavedSlice < ::ProtocolBuffers::Message; end
  class SavedTensorSlices < ::ProtocolBuffers::Message; end

  class SavedSliceMeta < ::ProtocolBuffers::Message
    set_fully_qualified_name "tensorflow.SavedSliceMeta"

    optional :string, :name, 1
    optional ::Tensorflow::TensorShapeProto, :shape, 2
    optional ::Tensorflow::DataType, :type, 3
    repeated ::Tensorflow::TensorSliceProto, :slice, 4
  end

  class SavedTensorSliceMeta < ::ProtocolBuffers::Message
    set_fully_qualified_name "tensorflow.SavedTensorSliceMeta"

    repeated ::Tensorflow::SavedSliceMeta, :tensor, 1
    optional ::Tensorflow::VersionDef, :versions, 2
  end

  class SavedSlice < ::ProtocolBuffers::Message
    set_fully_qualified_name "tensorflow.SavedSlice"

    optional :string, :name, 1
    optional ::Tensorflow::TensorSliceProto, :slice, 2
    optional ::Tensorflow::TensorProto, :data, 3
  end

  class SavedTensorSlices < ::ProtocolBuffers::Message
    set_fully_qualified_name "tensorflow.SavedTensorSlices"

    optional ::Tensorflow::SavedTensorSliceMeta, :meta, 1
    optional ::Tensorflow::SavedSlice, :data, 2
  end

end
