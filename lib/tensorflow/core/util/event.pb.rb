#!/usr/bin/env ruby
# Generated by the protocol buffer compiler. DO NOT EDIT!

require 'protocol_buffers'

begin; require 'tensorflow/core/framework/summary.pb'; rescue LoadError; end

module Tensorflow
  # forward declarations
  class Event < ::ProtocolBuffers::Message; end
  class LogMessage < ::ProtocolBuffers::Message; end
  class SessionLog < ::ProtocolBuffers::Message; end
  class TaggedRunMetadata < ::ProtocolBuffers::Message; end

  class Event < ::ProtocolBuffers::Message
    set_fully_qualified_name "tensorflow.Event"

    optional :double, :wall_time, 1
    optional :int64, :step, 2
    optional :string, :file_version, 3
    optional :bytes, :graph_def, 4
    optional ::Tensorflow::Summary, :summary, 5
    optional ::Tensorflow::LogMessage, :log_message, 6
    optional ::Tensorflow::SessionLog, :session_log, 7
    optional ::Tensorflow::TaggedRunMetadata, :tagged_run_metadata, 8
  end

  class LogMessage < ::ProtocolBuffers::Message
    # forward declarations

    # enums
    module Level
      include ::ProtocolBuffers::Enum

      set_fully_qualified_name "tensorflow.LogMessage.Level"

      UNKNOWN = 0
      DEBUG = 10
      INFO = 20
      WARN = 30
      ERROR = 40
      FATAL = 50
    end

    set_fully_qualified_name "tensorflow.LogMessage"

    optional ::Tensorflow::LogMessage::Level, :level, 1
    optional :string, :message, 2
  end

  class SessionLog < ::ProtocolBuffers::Message
    # forward declarations

    # enums
    module SessionStatus
      include ::ProtocolBuffers::Enum

      set_fully_qualified_name "tensorflow.SessionLog.SessionStatus"

      STATUS_UNSPECIFIED = 0
      START = 1
      STOP = 2
      CHECKPOINT = 3
    end

    set_fully_qualified_name "tensorflow.SessionLog"

    optional ::Tensorflow::SessionLog::SessionStatus, :status, 1
    optional :string, :checkpoint_path, 2
    optional :string, :msg, 3
  end

  class TaggedRunMetadata < ::ProtocolBuffers::Message
    set_fully_qualified_name "tensorflow.TaggedRunMetadata"

    optional :string, :tag, 1
    optional :bytes, :run_metadata, 2
  end

end
