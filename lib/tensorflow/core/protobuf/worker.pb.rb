#!/usr/bin/env ruby
# Generated by the protocol buffer compiler. DO NOT EDIT!

require 'protocol_buffers'

begin; require 'google/protobuf/any.pb'; rescue LoadError; end
begin; require 'tensorflow/core/framework/step_stats.pb'; rescue LoadError; end
begin; require 'tensorflow/core/framework/device_attributes.pb'; rescue LoadError; end
begin; require 'tensorflow/core/framework/graph.pb'; rescue LoadError; end
begin; require 'tensorflow/core/framework/tensor.pb'; rescue LoadError; end
begin; require 'tensorflow/core/protobuf/config.pb'; rescue LoadError; end

module Tensorflow
  # forward declarations
  class GetStatusRequest < ::ProtocolBuffers::Message; end
  class GetStatusResponse < ::ProtocolBuffers::Message; end
  class RegisterGraphRequest < ::ProtocolBuffers::Message; end
  class RegisterGraphResponse < ::ProtocolBuffers::Message; end
  class DeregisterGraphRequest < ::ProtocolBuffers::Message; end
  class DeregisterGraphResponse < ::ProtocolBuffers::Message; end
  class CleanupAllRequest < ::ProtocolBuffers::Message; end
  class CleanupAllResponse < ::ProtocolBuffers::Message; end
  class NamedTensor < ::ProtocolBuffers::Message; end
  class ExecutorOpts < ::ProtocolBuffers::Message; end
  class RunGraphRequest < ::ProtocolBuffers::Message; end
  class RunGraphResponse < ::ProtocolBuffers::Message; end
  class CleanupGraphRequest < ::ProtocolBuffers::Message; end
  class CleanupGraphResponse < ::ProtocolBuffers::Message; end
  class RecvTensorRequest < ::ProtocolBuffers::Message; end
  class RecvTensorResponse < ::ProtocolBuffers::Message; end
  class LoggingRequest < ::ProtocolBuffers::Message; end
  class LabeledStepStats < ::ProtocolBuffers::Message; end
  class LoggingResponse < ::ProtocolBuffers::Message; end
  class TraceOpts < ::ProtocolBuffers::Message; end
  class TracingRequest < ::ProtocolBuffers::Message; end
  class TracingResponse < ::ProtocolBuffers::Message; end

  class GetStatusRequest < ::ProtocolBuffers::Message
    set_fully_qualified_name "tensorflow.GetStatusRequest"

  end

  class GetStatusResponse < ::ProtocolBuffers::Message
    set_fully_qualified_name "tensorflow.GetStatusResponse"

    repeated ::Tensorflow::DeviceAttributes, :device_attributes, 1
  end

  class RegisterGraphRequest < ::ProtocolBuffers::Message
    set_fully_qualified_name "tensorflow.RegisterGraphRequest"

    optional :string, :session_handle, 1
    optional ::Tensorflow::GraphDef, :graph_def, 2
    optional :bool, :has_control_flow, 3
    optional ::Tensorflow::GraphOptions, :graph_options, 4
  end

  class RegisterGraphResponse < ::ProtocolBuffers::Message
    set_fully_qualified_name "tensorflow.RegisterGraphResponse"

    optional :string, :graph_handle, 1
  end

  class DeregisterGraphRequest < ::ProtocolBuffers::Message
    set_fully_qualified_name "tensorflow.DeregisterGraphRequest"

    optional :string, :graph_handle, 1
  end

  class DeregisterGraphResponse < ::ProtocolBuffers::Message
    set_fully_qualified_name "tensorflow.DeregisterGraphResponse"

  end

  class CleanupAllRequest < ::ProtocolBuffers::Message
    set_fully_qualified_name "tensorflow.CleanupAllRequest"

    repeated :string, :container, 1
  end

  class CleanupAllResponse < ::ProtocolBuffers::Message
    set_fully_qualified_name "tensorflow.CleanupAllResponse"

  end

  class NamedTensor < ::ProtocolBuffers::Message
    set_fully_qualified_name "tensorflow.NamedTensor"

    optional :string, :key, 1
    optional ::Tensorflow::TensorProto, :val, 2
  end

  class ExecutorOpts < ::ProtocolBuffers::Message
    set_fully_qualified_name "tensorflow.ExecutorOpts"

    optional :bool, :record_costs, 1
    optional :bool, :record_timeline, 3
  end

  class RunGraphRequest < ::ProtocolBuffers::Message
    set_fully_qualified_name "tensorflow.RunGraphRequest"

    optional :string, :graph_handle, 1
    optional :int64, :step_id, 2
    optional ::Tensorflow::ExecutorOpts, :exec_opts, 5
    repeated ::Tensorflow::NamedTensor, :send, 3
    repeated :string, :recv_key, 4
  end

  class RunGraphResponse < ::ProtocolBuffers::Message
    set_fully_qualified_name "tensorflow.RunGraphResponse"

    repeated ::Tensorflow::NamedTensor, :recv, 1
    optional ::Tensorflow::StepStats, :step_stats, 2
  end

  class CleanupGraphRequest < ::ProtocolBuffers::Message
    set_fully_qualified_name "tensorflow.CleanupGraphRequest"

    optional :int64, :step_id, 1
  end

  class CleanupGraphResponse < ::ProtocolBuffers::Message
    set_fully_qualified_name "tensorflow.CleanupGraphResponse"

  end

  class RecvTensorRequest < ::ProtocolBuffers::Message
    set_fully_qualified_name "tensorflow.RecvTensorRequest"

    optional :int64, :step_id, 1
    optional :string, :rendezvous_key, 2
    optional :bool, :dma_ok, 3
    optional ::Tensorflow::BusAdjacency, :client_bus_adjacency, 4
    optional ::Tensorflow::BusAdjacency, :server_bus_adjacency, 5
  end

  class RecvTensorResponse < ::ProtocolBuffers::Message
    set_fully_qualified_name "tensorflow.RecvTensorResponse"

    optional ::Tensorflow::TensorProto, :tensor, 1
    optional :bool, :is_dead, 2
    optional :int64, :send_start_micros, 3
    optional ::Google::Protobuf::Any, :transport_options, 4
  end

  class LoggingRequest < ::ProtocolBuffers::Message
    set_fully_qualified_name "tensorflow.LoggingRequest"

    optional :bool, :rpc_logging, 1
    optional :bool, :clear, 2
    repeated :int64, :fetch_step_id, 3
  end

  class LabeledStepStats < ::ProtocolBuffers::Message
    set_fully_qualified_name "tensorflow.LabeledStepStats"

    optional :int64, :step_id, 1
    optional ::Tensorflow::StepStats, :step_stats, 2
  end

  class LoggingResponse < ::ProtocolBuffers::Message
    set_fully_qualified_name "tensorflow.LoggingResponse"

    repeated ::Tensorflow::LabeledStepStats, :step, 1
  end

  class TraceOpts < ::ProtocolBuffers::Message
    set_fully_qualified_name "tensorflow.TraceOpts"

    optional :double, :duration, 1
    optional :bool, :use_step_profiler, 2
    optional :bool, :use_kernel_profiler, 3
    optional :bool, :use_extended_profiler, 4
    optional :bool, :use_gpu_profiler, 5
    optional :bool, :use_sample_profiler, 6
  end

  class TracingRequest < ::ProtocolBuffers::Message
    set_fully_qualified_name "tensorflow.TracingRequest"

    optional ::Tensorflow::TraceOpts, :options, 1
  end

  class TracingResponse < ::ProtocolBuffers::Message
    set_fully_qualified_name "tensorflow.TracingResponse"

  end

end
