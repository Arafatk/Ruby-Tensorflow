#!/usr/bin/env ruby
# Generated by the protocol buffer compiler. DO NOT EDIT!

require 'protocol_buffers'

begin; require 'tensorflow/core/framework/cost_graph.pb'; rescue LoadError; end
begin; require 'tensorflow/core/framework/step_stats.pb'; rescue LoadError; end

module Tensorflow
  # forward declarations
  class GPUOptions < ::ProtocolBuffers::Message; end
  class OptimizerOptions < ::ProtocolBuffers::Message; end
  class GraphOptions < ::ProtocolBuffers::Message; end
  class ThreadPoolOptionProto < ::ProtocolBuffers::Message; end
  class ConfigProto < ::ProtocolBuffers::Message; end
  class RunOptions < ::ProtocolBuffers::Message; end
  class RunMetadata < ::ProtocolBuffers::Message; end

  class GPUOptions < ::ProtocolBuffers::Message
    set_fully_qualified_name "tensorflow.GPUOptions"

    optional :double, :per_process_gpu_memory_fraction, 1
    optional :string, :allocator_type, 2
    optional :int64, :deferred_deletion_bytes, 3
    optional :bool, :allow_growth, 4
  end

  class OptimizerOptions < ::ProtocolBuffers::Message
    # forward declarations

    # enums
    module Level
      include ::ProtocolBuffers::Enum

      set_fully_qualified_name "tensorflow.OptimizerOptions.Level"

      L1 = 0
      L0 = -1
    end

    set_fully_qualified_name "tensorflow.OptimizerOptions"

    optional :bool, :do_common_subexpression_elimination, 1
    optional :bool, :do_constant_folding, 2
    optional :bool, :do_function_inlining, 4
    optional ::Tensorflow::OptimizerOptions::Level, :opt_level, 3
  end

  class GraphOptions < ::ProtocolBuffers::Message
    set_fully_qualified_name "tensorflow.GraphOptions"

    optional :bool, :enable_recv_scheduling, 2
    optional ::Tensorflow::OptimizerOptions, :optimizer_options, 3
    optional :int64, :build_cost_model, 4
    optional :bool, :infer_shapes, 5
    optional :bool, :place_pruned_graph, 6
  end

  class ThreadPoolOptionProto < ::ProtocolBuffers::Message
    set_fully_qualified_name "tensorflow.ThreadPoolOptionProto"

    optional :int32, :num_threads, 1
  end

  class ConfigProto < ::ProtocolBuffers::Message
    # forward declarations
    class DeviceCountEntry < ::ProtocolBuffers::Message; end

    set_fully_qualified_name "tensorflow.ConfigProto"

    # nested messages
    class DeviceCountEntry < ::ProtocolBuffers::Message
      set_fully_qualified_name "tensorflow.ConfigProto.DeviceCountEntry"

      optional :string, :key, 1
      optional :int32, :value, 2
    end

    repeated ::Tensorflow::ConfigProto::DeviceCountEntry, :device_count, 1
    optional :int32, :intra_op_parallelism_threads, 2
    optional :int32, :inter_op_parallelism_threads, 5
    optional :bool, :use_per_session_threads, 9
    repeated ::Tensorflow::ThreadPoolOptionProto, :session_inter_op_thread_pool, 12
    optional :int32, :placement_period, 3
    repeated :string, :device_filters, 4
    optional ::Tensorflow::GPUOptions, :gpu_options, 6
    optional :bool, :allow_soft_placement, 7
    optional :bool, :log_device_placement, 8
    optional ::Tensorflow::GraphOptions, :graph_options, 10
    optional :int64, :operation_timeout_in_ms, 11
  end

  class RunOptions < ::ProtocolBuffers::Message
    # forward declarations

    # enums
    module TraceLevel
      include ::ProtocolBuffers::Enum

      set_fully_qualified_name "tensorflow.RunOptions.TraceLevel"

      NO_TRACE = 0
      SOFTWARE_TRACE = 1
      HARDWARE_TRACE = 2
      FULL_TRACE = 3
    end

    set_fully_qualified_name "tensorflow.RunOptions"

    optional ::Tensorflow::RunOptions::TraceLevel, :trace_level, 1
    optional :int64, :timeout_in_ms, 2
    optional :int32, :inter_op_thread_pool, 3
  end

  class RunMetadata < ::ProtocolBuffers::Message
    set_fully_qualified_name "tensorflow.RunMetadata"

    optional ::Tensorflow::StepStats, :step_stats, 1
    optional ::Tensorflow::CostGraphDef, :cost_graph, 2
  end

end
