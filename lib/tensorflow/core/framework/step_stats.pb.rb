#!/usr/bin/env ruby
# Generated by the protocol buffer compiler. DO NOT EDIT!

require 'protocol_buffers'

begin; require 'tensorflow/core/framework/allocation_description.pb'; rescue LoadError; end
begin; require 'tensorflow/core/framework/tensor_description.pb'; rescue LoadError; end

module Tensorflow
  # forward declarations
  class AllocatorMemoryUsed < ::ProtocolBuffers::Message; end
  class NodeOutput < ::ProtocolBuffers::Message; end
  class NodeExecStats < ::ProtocolBuffers::Message; end
  class DeviceStepStats < ::ProtocolBuffers::Message; end
  class StepStats < ::ProtocolBuffers::Message; end

  class AllocatorMemoryUsed < ::ProtocolBuffers::Message
    set_fully_qualified_name "tensorflow.AllocatorMemoryUsed"

    optional :string, :allocator_name, 1
    optional :int64, :total_bytes, 2
    optional :int64, :peak_bytes, 3
  end

  class NodeOutput < ::ProtocolBuffers::Message
    set_fully_qualified_name "tensorflow.NodeOutput"

    optional :int32, :slot, 1
    optional ::Tensorflow::TensorDescription, :tensor_description, 3
  end

  class NodeExecStats < ::ProtocolBuffers::Message
    set_fully_qualified_name "tensorflow.NodeExecStats"

    optional :string, :node_name, 1
    optional :int64, :all_start_micros, 2
    optional :int64, :op_start_rel_micros, 3
    optional :int64, :op_end_rel_micros, 4
    optional :int64, :all_end_rel_micros, 5
    repeated ::Tensorflow::AllocatorMemoryUsed, :memory, 6
    repeated ::Tensorflow::NodeOutput, :output, 7
    optional :string, :timeline_label, 8
    optional :int64, :scheduled_micros, 9
    optional :uint32, :thread_id, 10
    repeated ::Tensorflow::AllocationDescription, :referenced_tensor, 11
  end

  class DeviceStepStats < ::ProtocolBuffers::Message
    set_fully_qualified_name "tensorflow.DeviceStepStats"

    optional :string, :device, 1
    repeated ::Tensorflow::NodeExecStats, :node_stats, 2
  end

  class StepStats < ::ProtocolBuffers::Message
    set_fully_qualified_name "tensorflow.StepStats"

    repeated ::Tensorflow::DeviceStepStats, :dev_stats, 1
  end

end
